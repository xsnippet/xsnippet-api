common:
  - &datetime_regex /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+(\+\d{2}:\d{2})|Z$/
  - &request_id_regex /^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$/
  - &slug_regex /^[a-zA-Z0-9]+$/

fixtures:
  - XSnippetApi

tests:
  - name: create a new snippet
    POST: /v1/snippets
    request_headers:
      content-type: application/json
    data:
      title: Hello, World!
      syntax: python
      content: print('Hello, World!')
      tags:
        - spam
        - eggs
    status: 201
    response_headers:
      x-request-id: *request_id_regex

  - name: retrieve previously created snippet via Location header
    GET: $LOCATION
    response_headers:
      content-type: application/json
      x-request-id: *request_id_regex
    response_json_paths:
      $.id: *slug_regex
      $.title: Hello, World!
      $.syntax: python
      $.content: print('Hello, World!')
      $.created_at: *datetime_regex
      $.updated_at: *datetime_regex
      $.tags.`sorted`:
        - eggs
        - spam
      $.`len`: 7
    status: 200

  - name: retrieve previously created snippet by ID
    GET: /v1/snippets/$HISTORY['create a new snippet'].$RESPONSE['id']
    request_headers:
      accept: application/json
    response_headers:
      content-type: application/json
      x-request-id: *request_id_regex
    response_json_paths:
      $.id: *slug_regex
      $.title: Hello, World!
      $.syntax: python
      $.content: print('Hello, World!')
      $.created_at: *datetime_regex
      $.updated_at: *datetime_regex
      $.tags.`sorted`:
        - eggs
        - spam
      $.`len`: 7
    status: 200

  - name: retrieve previously created snippet by ID (accept anything)
    GET: /v1/snippets/$HISTORY['create a new snippet'].$RESPONSE['id']
    request_headers:
      accept: "*/*"
    response_headers:
      content-type: application/json
      x-request-id: *request_id_regex
    response_json_paths:
      $.id: *slug_regex
      $.title: Hello, World!
      $.syntax: python
      $.content: print('Hello, World!')
      $.created_at: *datetime_regex
      $.updated_at: *datetime_regex
      $.tags.`sorted`:
        - eggs
        - spam
      $.`len`: 7
    status: 200

  - name: retrieve the raw content of a snippet
    GET: /v1/snippets/$HISTORY['create a new snippet'].$RESPONSE['id']
    request_headers:
      accept: "text/plain"
    response_headers:
      content-type: text/plain; charset=utf-8
      x-request-id: *request_id_regex
    response_strings:
      - print('Hello, World!')
    status: 200

  - name: retrieve previously created snippet by ID (multiple accept types)
    GET: /v1/snippets/$HISTORY['create a new snippet'].$RESPONSE['id']
    request_headers:
      accept: "application/xml, application/json"
    response_headers:
      content-type: application/json
      x-request-id: *request_id_regex
    response_json_paths:
      $.id: *slug_regex
      $.title: Hello, World!
      $.syntax: python
      $.content: print('Hello, World!')
      $.created_at: *datetime_regex
      $.updated_at: *datetime_regex
      $.tags.`sorted`:
        - eggs
        - spam
      $.`len`: 7
    status: 200

  - name: retrieve previously created snippet by ID (multiple weighted accept types)
    GET: /v1/snippets/$HISTORY['create a new snippet'].$RESPONSE['id']
    request_headers:
      accept: "application/xml; q=0.9, application/json"
    response_headers:
      content-type: application/json
      x-request-id: *request_id_regex
    response_json_paths:
      $.id: *slug_regex
      $.title: Hello, World!
      $.syntax: python
      $.content: print('Hello, World!')
      $.created_at: *datetime_regex
      $.updated_at: *datetime_regex
      $.tags.`sorted`:
        - eggs
        - spam
      $.`len`: 7
    status: 200
