common:
  - &request_id_regex /^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$/

fixtures:
  - XSnippetApi

tests:
  - name: test /syntaxes
    GET: /v1/syntaxes
    status: 200
    response_json_paths:
      $:
        - clojure
        - json
        - lua
        - python
        - rust
    response_headers:
      x-request-id: *request_id_regex

  - name: test /syntaxes (explicitly accept json)
    GET: /v1/syntaxes
    request_headers:
      accept: "application/json"
    status: 200
    response_json_paths:
      $:
        - clojure
        - json
        - lua
        - python
        - rust
    response_headers:
      x-request-id: *request_id_regex

  - name: test /syntaxes (explicitly accept any content type)
    GET: /v1/syntaxes
    request_headers:
      accept: "*/*"
    status: 200
    response_json_paths:
      $:
        - clojure
        - json
        - lua
        - python
        - rust
    response_headers:
      x-request-id: *request_id_regex

  - name: test /syntaxes (multiple accept types)
    GET: /v1/syntaxes
    request_headers:
      accept: "application/xml, application/json"
    status: 200
    response_json_paths:
      $:
        - clojure
        - json
        - lua
        - python
        - rust
    response_headers:
      x-request-id: *request_id_regex

  - name: test /syntaxes (multiple weighted accept types)
    GET: /v1/syntaxes
    request_headers:
      accept: "text/html; q=0.9, application/json"
    status: 200
    response_json_paths:
      $:
        - clojure
        - json
        - lua
        - python
        - rust
    response_headers:
      x-request-id: *request_id_regex

  - name: test /syntaxes (unsupported accept type)
    GET: /v1/syntaxes
    request_headers:
      accept: "application/xml"
    status: 406
    response_headers:
      x-request-id: *request_id_regex
